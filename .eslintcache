[{"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Dashboard/index.tsx":"1","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Dashboard/styles.ts":"2","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/styles/global.ts":"3","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/SignIn/index.tsx":"4","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/ToastContainer/index.tsx":"5","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/ToastContainer/Toast/index.tsx":"6","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/App.tsx":"7","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/ForgotPassword/index.tsx":"8","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/Button/index.tsx":"9","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/Tooltip/styles.ts":"10","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/index.tsx":"11","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/ResetPassword/styles.ts":"12","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/ToastContainer/Toast/styles.ts":"13","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/context/AuthContext.tsx":"14","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Register/styles.ts":"15","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/routes/Route.tsx":"16","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/ForgotPassword/styles.ts":"17","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Register/index.tsx":"18","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/Input/styles.ts":"19","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Profile/styles.ts":"20","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Profile/index.tsx":"21","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/Input/index.tsx":"22","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/Tooltip/index.tsx":"23","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/context/index.tsx":"24","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/ToastContainer/styles.ts":"25","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/context/ToastContext.tsx":"26","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/utils/getValidationErrors.ts":"27","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/routes/index.tsx":"28","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/SignIn/styles.ts":"29"},{"size":11162,"mtime":1612194574033,"results":"30","hashOfConfig":"31"},{"size":5408,"mtime":1611425184428,"results":"32","hashOfConfig":"31"},{"size":463,"mtime":1606351071425,"results":"33","hashOfConfig":"34"},{"size":2940,"mtime":1610903997850,"results":"35","hashOfConfig":"36"},{"size":954,"mtime":1606935942678,"results":"37","hashOfConfig":"36"},{"size":1291,"mtime":1610991189249,"results":"38","hashOfConfig":"31"},{"size":385,"mtime":1606934544598,"results":"39","hashOfConfig":"36"},{"size":3139,"mtime":1611009068295,"results":"40","hashOfConfig":"34"},{"size":378,"mtime":1610991403901,"results":"41","hashOfConfig":"36"},{"size":741,"mtime":1606604344422,"results":"42","hashOfConfig":"31"},{"size":198,"mtime":1606350732690,"results":"43","hashOfConfig":"31"},{"size":1437,"mtime":1610992752631,"results":"44","hashOfConfig":"34"},{"size":1226,"mtime":1610991212525,"results":"45","hashOfConfig":"34"},{"size":2222,"mtime":1611244469810,"results":"46","hashOfConfig":"36"},{"size":1366,"mtime":1606943321623,"results":"47","hashOfConfig":"31"},{"size":793,"mtime":1611007273651,"results":"48","hashOfConfig":"36"},{"size":1558,"mtime":1611009114979,"results":"49","hashOfConfig":"36"},{"size":3047,"mtime":1611239806072,"results":"50","hashOfConfig":"31"},{"size":1153,"mtime":1606604708313,"results":"51","hashOfConfig":"36"},{"size":1622,"mtime":1611242233905,"results":"52","hashOfConfig":"36"},{"size":5512,"mtime":1611267716668,"results":"53","hashOfConfig":"31"},{"size":1649,"mtime":1611240510325,"results":"54","hashOfConfig":"31"},{"size":355,"mtime":1606604391583,"results":"55","hashOfConfig":"36"},{"size":308,"mtime":1606853031901,"results":"56","hashOfConfig":"31"},{"size":162,"mtime":1606918131603,"results":"57","hashOfConfig":"31"},{"size":1420,"mtime":1606913077630,"results":"58","hashOfConfig":"31"},{"size":314,"mtime":1606576367383,"results":"59","hashOfConfig":"31"},{"size":807,"mtime":1611233640780,"results":"60","hashOfConfig":"31"},{"size":1437,"mtime":1606943127825,"results":"61","hashOfConfig":"31"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"1qzjvl0",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"silz4o",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},"6ubtnd",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Dashboard/index.tsx",["129"],"import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nimport { FiClock, FiPower } from 'react-icons/fi';\nimport { useAuth } from '../../context/AuthContext';\n\nimport logoImg from '../../assets/logo.svg';\nimport nullAvatar from '../../assets/no_avatar.jpg';\n\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  SubContent,\n  PanelSelection,\n  Schedule,\n  NexAppointment,\n  Section,\n  Appointment,\n  Calendar,\n} from './styles';\nimport api from '../../services/api';\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface AppointmentsItem {\n  id: string;\n  date: string;\n  hourFormatted: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [isSetNewAppointmentPanelOn, setisSetNewAppointmentPanelOn] = useState(\n    false,\n  );\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n\n  const { signOut, user } = useAuth();\n\n  const [monthAvailability, setMonthAvailability] = useState<\n    MonthAvailabilityItem[]\n  >([]);\n\n  const [appointments, setAppointments] = useState<AppointmentsItem[]>([]);\n\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`/providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then(response => {\n        setMonthAvailability(response.data);\n      });\n  }, [currentMonth, user.id]);\n\n  useEffect(() => {\n    api\n      .get<AppointmentsItem[]>('/appointments/me', {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate(),\n        },\n      })\n      .then(response => {\n        const appointmentsFormatted = response.data.map(appointment => {\n          return {\n            ...appointment,\n            hourFormatted: format(parseISO(appointment.date), 'HH:mm'),\n          };\n        });\n        setAppointments(appointmentsFormatted);\n      });\n  }, [selectedDate, user.id]);\n\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability\n      .filter(monthDay => monthDay.available === false)\n      .map(monthDay => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n\n        return new Date(year, month, monthDay.day);\n      });\n\n    return dates;\n  }, [currentMonth, monthAvailability]);\n\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMM\", {\n      locale: ptBR,\n    });\n  }, [selectedDate]);\n\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, 'EEEE', { locale: ptBR });\n  }, [selectedDate]);\n\n  const morningAppointments = useMemo(() => {\n    return appointments\n      .filter(appointment => {\n        return parseISO(appointment.date).getHours() < 12;\n      })\n      .sort((a, b) => (a.hourFormatted > b.hourFormatted ? 1 : -1));\n  }, [appointments]);\n\n  const afternoonAppointments = useMemo(() => {\n    return appointments\n      .filter(appointment => {\n        return parseISO(appointment.date).getHours() >= 12;\n      })\n      .sort((a, b) => (a.hourFormatted > b.hourFormatted ? 1 : -1));\n  }, [appointments]);\n\n  const nextAppointment = useMemo(() => {\n    return appointments\n      .sort((a, b) => (a.hourFormatted > b.hourFormatted ? 1 : -1))\n      .find(appointment => {\n        return isAfter(parseISO(appointment.date), new Date());\n      });\n  }, [appointments]);\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Profile>\n            <img src={user.avatar_url ?? nullAvatar} alt={user.name} />\n\n            <div>\n              <span>Bem-vindo(a),</span>\n              <Link to=\"/profile\">\n                <strong>{user.name.split(' ', 1)}</strong>\n              </Link>\n            </div>\n          </Profile>\n\n          <button type=\"button\" onClick={signOut}>\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n\n      <Content>\n        <SubContent>\n          <PanelSelection>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setisSetNewAppointmentPanelOn(false);\n              }}\n            >\n              Meus agendamentos\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setisSetNewAppointmentPanelOn(true);\n              }}\n            >\n              Agendar Novo horário\n            </button>\n          </PanelSelection>\n          {!isSetNewAppointmentPanelOn ? (\n            <Schedule>\n              <h1>Horário Agendado</h1>\n              <p>\n                {isToday(selectedDate) && <span>Hoje</span>}\n                <span>{selectedDateAsText}</span>\n                <span>{selectedWeekDay}</span>\n              </p>\n\n              {isToday(selectedDate) && nextAppointment && (\n                <NexAppointment>\n                  <strong>Atendimento a seguir</strong>\n                  <div>\n                    <img\n                      src={nextAppointment.user.avatar_url}\n                      alt={nextAppointment.user.name}\n                    />\n                    <strong>{nextAppointment.user.name}</strong>\n                    <span>\n                      <FiClock />\n                      {nextAppointment.hourFormatted}\n                    </span>\n                  </div>\n                </NexAppointment>\n              )}\n\n              <Section>\n                <strong>Manhã</strong>\n\n                {morningAppointments.length === 0 && (\n                  <p>Nenhum agendamento neste período</p>\n                )}\n\n                {morningAppointments.map(appointment => (\n                  <Appointment key={appointment.id}>\n                    <span>\n                      <FiClock />\n                      {appointment.hourFormatted}\n                    </span>\n\n                    <div>\n                      <img\n                        src={appointment.user.avatar_url}\n                        alt={appointment.user.name}\n                      />\n                      <strong>{appointment.user.name}</strong>\n                    </div>\n                  </Appointment>\n                ))}\n              </Section>\n\n              <Section>\n                <strong>Tarde</strong>\n                {afternoonAppointments.length === 0 && (\n                  <p>Nenhum agendamento neste período</p>\n                )}\n\n                {afternoonAppointments.map(appointment => (\n                  <Appointment key={appointment.id}>\n                    <span>\n                      <FiClock />\n                      {appointment.hourFormatted}\n                    </span>\n\n                    <div>\n                      <img\n                        src={appointment.user.avatar_url}\n                        alt={appointment.user.name}\n                      />\n                      <strong>{appointment.user.name}</strong>\n                    </div>\n                  </Appointment>\n                ))}\n              </Section>\n            </Schedule>\n          ) : (\n            <Schedule>\n              <h1>Disponibilidade</h1>\n              <p>\n                {isToday(selectedDate) && <span>Hoje</span>}\n                <span>{selectedDateAsText}</span>\n                <span>{selectedWeekDay}</span>\n              </p>\n\n              {isToday(selectedDate) && nextAppointment && (\n                <NexAppointment>\n                  <strong>Atendimento a seguir</strong>\n                  <div>\n                    <img\n                      src={nextAppointment.user.avatar_url}\n                      alt={nextAppointment.user.name}\n                    />\n                    <strong>{nextAppointment.user.name}</strong>\n                    <span>\n                      <FiClock />\n                      {nextAppointment.hourFormatted}\n                    </span>\n                  </div>\n                </NexAppointment>\n              )}\n\n              <Section>\n                <strong>Manhã</strong>\n\n                {morningAppointments.length === 0 && (\n                  <p>Nenhum agendamento neste período</p>\n                )}\n\n                {morningAppointments.map(appointment => (\n                  <Appointment key={appointment.id}>\n                    <span>\n                      <FiClock />\n                      {appointment.hourFormatted}\n                    </span>\n\n                    <div>\n                      <img\n                        src={appointment.user.avatar_url}\n                        alt={appointment.user.name}\n                      />\n                      <strong>{appointment.user.name}</strong>\n                    </div>\n                  </Appointment>\n                ))}\n              </Section>\n\n              <Section>\n                <strong>Tarde</strong>\n                {afternoonAppointments.length === 0 && (\n                  <p>Nenhum agendamento neste período</p>\n                )}\n\n                {afternoonAppointments.map(appointment => (\n                  <Appointment key={appointment.id}>\n                    <span>\n                      <FiClock />\n                      {appointment.hourFormatted}\n                    </span>\n\n                    <div>\n                      <img\n                        src={appointment.user.avatar_url}\n                        alt={appointment.user.name}\n                      />\n                      <strong>{appointment.user.name}</strong>\n                    </div>\n                  </Appointment>\n                ))}\n              </Section>\n            </Schedule>\n          )}\n        </SubContent>\n        <Calendar>\n          <DayPicker\n            weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n            fromMonth={new Date()}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disabledDays]}\n            modifiers={{\n              available: { daysOfWeek: [1, 2, 3, 4, 5] },\n            }}\n            selectedDays={selectedDate}\n            onDayClick={handleDateChange}\n            onMonthChange={handleMonthChange}\n            months={[\n              'Janeiro',\n              'Fevereiro',\n              'Março',\n              'Abril',\n              'Maio',\n              'Junho',\n              'Julho',\n              'Agosto',\n              'Setembro',\n              'Outubro',\n              'Novembro',\n              'Dezembro',\n            ]}\n          />\n        </Calendar>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Dashboard/styles.ts",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/styles/global.ts",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/SignIn/index.tsx",["130"],"import React, { useRef, useCallback } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { useToast } from '../../context/ToastContext';\n\nimport Button from '../../components/Button/index';\nimport Input from '../../components/Input/index';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport logo from '../../assets/logo.svg';\n\nimport {\n  Container,\n  LoginSection,\n  AnimationContainer,\n  Background,\n} from './styles';\n\ninterface LoginDetails {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const history = useHistory();\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  // console.log(user);\n\n  const handleSubmit = useCallback(\n    async (data: LoginDetails) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .email('Enter a valid e-mail')\n            .required('E-mail is mandatory'),\n          password: Yup.string().required('Password is mandatory'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n\n        const emailName = data.email.split('@', 1);\n\n        addToast({\n          title: `Bem-vindx ${emailName}`,\n          type: 'success',\n          description: 'Login realizado com sucesso',\n        });\n\n        history.push('/dashboard');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const error = getValidationErrors(err);\n          formRef.current?.setErrors(error);\n          return;\n        }\n\n        addToast({\n          title: 'Falha ao logar',\n          type: 'error',\n          description: 'Usuário ou senha inválidos',\n        });\n      }\n    },\n    [signIn, addToast, history],\n  );\n\n  return (\n    <Container>\n      <LoginSection>\n        <AnimationContainer>\n          <img src={logo} alt=\"Logo\" />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu logon</h1>\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n            <Button type=\"submit\">Entrar</Button>\n            <Link to=\"/forgot-password\">Esqueci minha senha</Link>\n          </Form>\n\n          <Link to=\"/register\">\n            <FiLogIn />\n            Criar conta\n          </Link>\n        </AnimationContainer>\n      </LoginSection>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n",["131","132","133","134","135"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/ToastContainer/index.tsx",["136"],"import React from 'react';\nimport { useTransition } from 'react-spring';\n\nimport { ToastMessagesProps } from '../../context/ToastContext';\nimport Toast from './Toast/index';\n\nimport { Container } from './styles';\n\ninterface MessagesProps {\n  messages: ToastMessagesProps[];\n}\n\nconst ToastContainer: React.FC<MessagesProps> = ({ messages }) => {\n  const messagesWithTransition = useTransition(messages, msg => msg.id, {\n    /* from: { top: '-150%', opacity: 0 },\n    enter: { top: '0%', opacity: 1 },\n    leave: { top: '-150%', opacity: 1 }, */\n    from: { transform: 'translate3d(0,-120px,0)', opacity: 0 },\n    enter: { transform: 'translate3d(0,0px,0)', opacity: 1 },\n    leave: { transform: 'translate3d(0,-120px,0)', opacity: 0 },\n  });\n  return (\n    <Container>\n      {messagesWithTransition.map(({ item, key, props }) => (\n        <Toast key={key} message={item} style={props} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n",["137","138","139","140","141"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/ToastContainer/Toast/index.tsx",["142"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/App.tsx",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/ForgotPassword/index.tsx",["143"],"import React, { useRef, useCallback, useState } from 'react';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { useToast } from '../../context/ToastContext';\n\nimport Button from '../../components/Button/index';\nimport Input from '../../components/Input/index';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport logo from '../../assets/logo.svg';\n\nimport {\n  Container,\n  LoginSection,\n  AnimationContainer,\n  Background,\n} from './styles';\nimport api from '../../services/api';\n\ninterface ForgotPasswordDetails {\n  email: string;\n  password: string;\n}\n\nconst ForgotPassword: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordDetails) => {\n      try {\n        setLoading(true);\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .email('Enter a valid e-mail')\n            .required('E-mail is mandatory'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/password/forgot', {\n          email: data.email,\n        });\n\n        addToast({\n          type: 'success',\n          title: 'E-mail enviado',\n          description:\n            'Verifique sua caixa de entrada para acessar o link de recuperação de senha',\n        });\n\n        setIsEmailSent(true);\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const error = getValidationErrors(err);\n          formRef.current?.setErrors(error);\n          return;\n        }\n\n        addToast({\n          title: 'Falha na recuperação de senha',\n          type: 'error',\n          description:\n            'Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente',\n        });\n      } finally {\n        setLoading(false);\n      }\n    },\n    [addToast],\n  );\n\n  return (\n    <Container>\n      <LoginSection>\n        <AnimationContainer>\n          <img src={logo} alt=\"Logo\" />\n\n          {!isEmailSent ? (\n            <Form ref={formRef} onSubmit={handleSubmit}>\n              <h1>Recuperar Senha</h1>\n              <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n              <Button loading={loading} type=\"submit\">\n                Recuperar\n              </Button>\n            </Form>\n          ) : (\n            <div>\n              <h3>\n                Email enviado com sucesso.\n                <br />\n                <br />\n                Caso não o tenha encontrado, confira na caixa de Spams\n              </h3>\n            </div>\n          )}\n          <Link to=\"/\">\n            <FiLogIn />\n            Voltar ao Login\n          </Link>\n        </AnimationContainer>\n      </LoginSection>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n",["144","145","146","147","148"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/Button/index.tsx",["149"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/Tooltip/styles.ts",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/index.tsx",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/ResetPassword/styles.ts",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/ToastContainer/Toast/styles.ts",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/context/AuthContext.tsx",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Register/styles.ts",[],["150","151","152","153","154"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/routes/Route.tsx",["155"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/ForgotPassword/styles.ts",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Register/index.tsx",["156","157","158","159","160"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/Input/styles.ts",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Profile/styles.ts",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/Profile/index.tsx",["161","162"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/Input/index.tsx",["163","164","165"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/Tooltip/index.tsx",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/context/index.tsx",[],["166","167","168","169","170"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/components/ToastContainer/styles.ts",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/context/ToastContext.tsx",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/utils/getValidationErrors.ts",["171"],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/routes/index.tsx",[],"/home/andgrande/Desktop/GoStack/apps/go-barber/frontend/src/pages/SignIn/styles.ts",[],{"ruleId":"172","severity":1,"message":"173","line":5,"column":21,"nodeType":"174","messageId":"175","endLine":5,"endColumn":33},{"ruleId":"172","severity":1,"message":"176","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":21},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"172","severity":1,"message":"187","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":28},{"ruleId":"177","replacedBy":"188"},{"ruleId":"179","replacedBy":"189"},{"ruleId":"181","replacedBy":"190"},{"ruleId":"183","replacedBy":"191"},{"ruleId":"185","replacedBy":"192"},{"ruleId":"172","severity":1,"message":"187","line":10,"column":10,"nodeType":"174","messageId":"175","endLine":10,"endColumn":28},{"ruleId":"172","severity":1,"message":"176","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":21},{"ruleId":"177","replacedBy":"193"},{"ruleId":"179","replacedBy":"194"},{"ruleId":"181","replacedBy":"195"},{"ruleId":"183","replacedBy":"196"},{"ruleId":"185","replacedBy":"197"},{"ruleId":"172","severity":1,"message":"198","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":37},{"ruleId":"177","replacedBy":"199"},{"ruleId":"179","replacedBy":"200"},{"ruleId":"181","replacedBy":"201"},{"ruleId":"183","replacedBy":"202"},{"ruleId":"185","replacedBy":"203"},{"ruleId":"172","severity":1,"message":"204","line":5,"column":17,"nodeType":"174","messageId":"175","endLine":5,"endColumn":31},{"ruleId":"172","severity":1,"message":"176","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":21},{"ruleId":"172","severity":1,"message":"205","line":35,"column":36,"nodeType":"174","messageId":"175","endLine":35,"endColumn":41},{"ruleId":"206","severity":1,"message":"207","line":35,"column":45,"nodeType":"208","messageId":"209","endLine":35,"endColumn":48,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":36,"column":7,"nodeType":"213","messageId":"214","endLine":36,"endColumn":18},{"ruleId":"215","severity":1,"message":"216","line":81,"column":5,"nodeType":"217","endLine":81,"endColumn":14,"suggestions":"218"},{"ruleId":"172","severity":1,"message":"219","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":28},{"ruleId":"172","severity":1,"message":"176","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":21},{"ruleId":"172","severity":1,"message":"220","line":2,"column":3,"nodeType":"174","messageId":"175","endLine":2,"endColumn":22},{"ruleId":"172","severity":1,"message":"221","line":9,"column":10,"nodeType":"174","messageId":"175","endLine":9,"endColumn":23},{"ruleId":"172","severity":1,"message":"222","line":27,"column":22,"nodeType":"174","messageId":"175","endLine":27,"endColumn":34},{"ruleId":"177","replacedBy":"223"},{"ruleId":"179","replacedBy":"224"},{"ruleId":"181","replacedBy":"225"},{"ruleId":"183","replacedBy":"226"},{"ruleId":"185","replacedBy":"227"},{"ruleId":"172","severity":1,"message":"228","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},"@typescript-eslint/no-unused-vars","'DayModifiers' is defined but never used.","Identifier","unusedVar","'FormHandles' is defined but never used.","lines-around-directive",["229"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'ToastMessagesProps' is defined but never used.",["229"],[],[],[],[],["229"],[],[],[],[],"'ButtonHTMLAttributes' is defined but never used.",["229"],[],[],[],[],"'RouterDOMProps' is defined but never used.","'reset' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["230","231"],"no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'addToast'. Either include it or remove the dependency array.","ArrayExpression",["232"],"'ChangeEvent' is defined but never used.","'InputHTMLAttributes' is defined but never used.","'IconBaseProps' is defined but never used.","'defaultValue' is assigned a value but never used.",["229"],[],[],[],[],"'ValidationError' is defined but never used.","padding-line-between-statements",{"messageId":"233","fix":"234","desc":"235"},{"messageId":"236","fix":"237","desc":"238"},{"desc":"239","fix":"240"},"suggestUnknown",{"range":"241","text":"242"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"241","text":"243"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [addToast, history]",{"range":"244","text":"245"},[995,998],"unknown","never",[2217,2226],"[addToast, history]"]